<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.anrisoftware.globalpom</groupId>
	<artifactId>globalpom-parent</artifactId>
	<version>1.39-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Global POM :: Parent</name>
	<description>Declares all dependencies and all Maven plug-ins needed for a
Advanced Natural Research Institute software
project. It will declare the listed properties, add plug-in to deploy
source and test sources and deploy the project-tests with the project jar.</description>
	<url>https://anrisoftware.com/projects/projects/globalpom</url>
	<inceptionYear>2011</inceptionYear>

	<developers>
		<developer>
			<id>EM</id>
			<name>Erwin Müller</name>
			<organization>Advanced Natural Research Insitute</organization>
			<email>erwin.mueller@deventm.org</email>
			<roles>
				<role>Owner</role>
				<role>Developer</role>
			</roles>
			<timezone>Europe/Berlin</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>LGPLv3</name>
			<url>http://www.gnu.org/licenses/lgpl.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<issueManagement>
		<system>Redmine</system>
		<url>https://anrisoftware.com/projects/projects/globalpom</url>
	</issueManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<file.encoding>${project.build.sourceEncoding}</file.encoding>
		<project.custom.resources.escapestring>\</project.custom.resources.escapestring>
		<project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
		<project.custom.groovy.version>2.3.6</project.custom.groovy.version>
		<project.custom.groovy-eclipse-compiler.version>2.8.0-01</project.custom.groovy-eclipse-compiler.version>
		<project.custom.groovy-eclipse-batch.version>2.1.8-01</project.custom.groovy-eclipse-batch.version>
		<project.custom.source.source>1.6</project.custom.source.source>
		<project.custom.source.target>1.6</project.custom.source.target>
		<project.custom.current.year>2014</project.custom.current.year>
		<project.custom.year>${project.inceptionYear}-${project.custom.current.year}</project.custom.year>
		<project.custom.user.name>Erwin Müller</project.custom.user.name>
		<project.custom.user.email>erwin.mueller@deventm.org</project.custom.user.email>
		<project.custom.izpack.standalone.compiler.version>4.3.5</project.custom.izpack.standalone.compiler.version>
		<project.custom.slf4j.version>1.7.7</project.custom.slf4j.version>
		<project.custom.logback.version>1.1.2</project.custom.logback.version>
	</properties>

	<scm>
		<connection>scm:git:git@anrisoftware.com:globalpom-parent.git</connection>
		<developerConnection>scm:git:git@anrisoftware.com:globalpom-parent.git</developerConnection>
		<url>https://anrisoftware.com/projects/projects/globalpom/repository</url>
	</scm>

	<dependencies>

		<!-- logging dependencies -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<distributionManagement>
	    <site>
	      <id>anrisoftware</id>
	      <url>dav:https://anrisoftware.com/javadoc/${project.groupId}/${project.artifactId}</url>
	    </site>
        <repository>
			<id>osssonatype</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
		<snapshotRepository>
			<id>osssonatype_snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>

			<!-- slf4j -->
			<dependency>
				<!-- MIT License -->
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${project.custom.slf4j.version}</version>
			</dependency>
			<dependency>
				<!-- MIT License -->
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${project.custom.slf4j.version}</version>
			</dependency>

			<!-- logback -->
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${project.custom.logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${project.custom.logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-access</artifactId>
				<version>${project.custom.logback.version}</version>
			</dependency>

			<!-- junit -->
			<dependency>
				<!-- Common Public License Version 1.0 -->
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
			</dependency>

			<!-- perf4j -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.perf4j</groupId>
				<artifactId>perf4j</artifactId>
				<version>0.9.16</version>
			</dependency>

			<!-- perfidix -->
			<dependency>
				<!-- BSD-3 -->
				<groupId>org.perfidix</groupId>
				<artifactId>perfidix</artifactId>
				<version>3.6.9</version>
			</dependency>

			<!-- easytesting fest -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.easytesting</groupId>
				<artifactId>fest-reflect</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.easytesting</groupId>
				<artifactId>fest-swing-junit-4.5</artifactId>
				<version>1.2.1</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.easytesting</groupId>
				<artifactId>fest-util</artifactId>
				<version>1.1.6</version>
			</dependency>

			<!-- trove -->
			<!-- The Trove library provides high speed regular and primitive collections
				for Java. -->
			<dependency>
				<!-- LGPLv2 -->
				<groupId>net.sf.trove4j</groupId>
				<artifactId>trove4j</artifactId>
				<version>3.0.3</version>
			</dependency>

			<!-- jspf -->
			<dependency>
				<groupId>net.xeoh</groupId>
				<artifactId>jspf-core</artifactId>
				<version>1.0.3</version>
			</dependency>

			<!-- ammentos -->
			<dependency>
				<groupId>it.biobytes.ammentos</groupId>
				<artifactId>ammentos</artifactId>
				<version>1.3.7</version>
			</dependency>

			<!-- java-image-scaling -->
			<!-- The purpose of the library is to provide better image scaling options
				than the Java runtime provides. -->
			<dependency>
				<!-- LGPLv3 -->
				<groupId>com.mortennobel</groupId>
				<artifactId>java-image-scaling</artifactId>
				<version>0.8.5</version>
			</dependency>

			<!-- groovy -->
			<!-- Groovy: A powerful, dynamic language for the JVM -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-ant</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-bsf</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-console</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-docgenerator</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-groovydoc</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-groovysh</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-jmx</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-json</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-jsr223</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-servlet</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-sql</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-swing</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-templates</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-test</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-testng</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-xml</artifactId>
				<version>${project.custom.groovy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-eclipse-batch</artifactId>
				<version>${project.custom.groovy-eclipse-batch.version}</version>
			</dependency>

			<!-- apache commons -->
			<dependency>
				<!-- Apache Commons Compress software defines an API for working with
					compression and archive formats. These include: bzip2, gzip, pack200, lzma,
					xz, Snappy, traditional Unix Compress and ar, cpio, jar, tar, zip, dump,
					7z, arj. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>1.8.1</version>
			</dependency>
			<dependency>
				<!-- Apache Commons Lang, a package of Java utility classes for the classes
					that are in java. langʼs hierarchy, or are considered to be so standard as
					to justify existence in java. lang. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
			<dependency>
				<!-- The Math project is a library of lightweight, self-contained mathematics
					and statistics components addressing the most common practical problems not
					immediately available in the Java programming language or commons-lang. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>3.3</version>
			</dependency>
			<dependency>
				<!-- Apache Commons Exec is a library to reliably execute external processes
					from within the JVM. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-exec</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<!-- VFS is a Virtual File System library. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-vfs2</artifactId>
				<version>2.0</version>
			</dependency>
			<dependency>
				<!-- Contains types that extend and augment the Java Collections Framework. -->
				<!-- Apache 2.0 -->
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>4.0</version>
			</dependency>
			<dependency>
				<!-- Apache Commons Net library contains a collection of network utilities
					and protocol implementations. Supported protocols include: Echo, Finger,
					FTP, NNTP, NTP, POP3(S), SMTP(S), Telnet, Whois -->
				<!-- Apache 2.0 -->
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>3.3</version>
			</dependency>
			<dependency>
				<!-- The codec package contains simple encoder and decoders for various
					formats such as Base64 and Hexadecimal. In addition to these widely used
					encoders and decoders, the codec package also maintains a collection of phonetic
					encoding utilities. -->
				<!-- Apache 2.0 -->
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>
			<dependency>
				<!-- Types that extend and augment the Java Collections Framework. -->
				<!-- Apache 2.0 -->
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<!-- The Commons IO library contains utility classes, stream implementations,
					file filters, file comparators, endian transformation classes, and much more. -->
				<!-- Apache 2.0 -->
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<!-- Commons Transaction -->
			<dependency>
				<!-- Apache -->
				<groupId>commons-transaction</groupId>
				<artifactId>commons-transaction</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<!-- CDDL + GPLv2 with classpath exception -->
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>6.0</version>
			</dependency>

			<!-- google guava -->
			<dependency>
				<!-- Guava is a suite of core and expanded libraries that include utility
					classes, googleʼs collections, io classes, and much much more. This project
					is a complete packaging of all the Guava libraries into a single jar. Individual
					portions of Guava can be used by downloading the appropriate module and its
					dependencies. Guava (complete) has only one code dependency - javax. annotation,
					per the JSR-305 spec. -->
				<!-- Apache 2.0 -->
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>18.0</version>
			</dependency>

			<!-- google guice -->
			<!-- Guice is a lightweight dependency injection framework for Java 5
				and above. -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>com.google.inject</groupId>
				<artifactId>guice</artifactId>
				<version>3.0</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-assistedinject</artifactId>
				<version>3.0</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>com.google.inject.extensions</groupId>
				<artifactId>guice-multibindings</artifactId>
				<version>3.0</version>
			</dependency>
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>
			<dependency>
				<!-- Public Domain -->
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<!-- LGPL -->
				<groupId>net.sourceforge.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>1.3.2</version>
			</dependency>

			<!-- Table Layout -->
			<!-- TableLayout is a totally free layout manager designed to make creating
				user interfaces fast and easy. It can do anything GridBagLayout can do and
				much, much more. Yet it is remarkably simple and easy to use. -->
			<dependency>
				<groupId>tablelayout</groupId>
				<artifactId>TableLayout</artifactId>
				<version>20050920</version>
			</dependency>

			<!-- MyDoggy -->
			<dependency>
				<!-- MyDoggy-Plaf is the default implementation of mydoggy-api. -->
				<!-- LGPL -->
				<groupId>net.sourceforge.mydoggy</groupId>
				<artifactId>mydoggy-plaf</artifactId>
				<version>1.5.0-beta-r1389</version>
			</dependency>

			<!-- string template -->
			<!-- StringTemplate is a java template engine for generating source code,
				web pages, emails, or any other formatted text output. -->
			<dependency>
				<!-- BSD -->
				<groupId>org.antlr</groupId>
				<artifactId>ST4</artifactId>
				<version>4.0.8</version>
			</dependency>

			<!-- sqlite -->
			<dependency>
				<!-- SQLite JDBC library -->
				<groupId>org.xerial</groupId>
				<artifactId>sqlite-jdbc</artifactId>
				<version>3.7.2</version>
			</dependency>

			<!-- args4j -->
			<dependency>
				<!-- MIT License -->
				<groupId>args4j</groupId>
				<artifactId>args4j</artifactId>
				<version>2.0.29</version>
			</dependency>

			<!-- xstream -->
			<!-- Java to XML Serialization, and back again. -->
			<dependency>
				<!-- BSD style -->
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.7</version>
			</dependency>

			<!-- javacsv -->
			<dependency>
				<!-- LGPL -->
				<groupId>com.csvreader</groupId>
				<artifactId>javacsv</artifactId>
				<version>2.1</version>
			</dependency>

			<!-- jasypt -->
			<!-- Java library which enables encryption in java apps with minimum effort. -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.jasypt</groupId>
				<artifactId>jasypt</artifactId>
				<version>1.9.2</version>
			</dependency>

			<!-- ostermiller utils -->
			<!-- Open source (GPL) Java utilities maintained by Stephen Ostermiller
				with help from many contributors. -->
			<dependency>
				<!-- GPLv2 -->
				<groupId>org.ostermiller</groupId>
				<artifactId>utils</artifactId>
				<version>1.07.00</version>
			</dependency>

			<!-- hazelcast -->
			<!-- Hazelcast is an in-memory data grid solution for Java. -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-all</artifactId>
				<version>3.2.5</version>
			</dependency>

			<!-- piccolo2d -->
			<!-- A revolutionary way to create robust, full-featured graphical applications
				in Java and C#, with striking visual effects such as zooming, animation and
				multiple representations. -->
			<dependency>
				<!-- BSD -->
				<groupId>org.piccolo2d</groupId>
				<artifactId>piccolo2d-core</artifactId>
				<version>3.0</version>
			</dependency>
			<dependency>
				<!-- BSD -->
				<groupId>org.piccolo2d</groupId>
				<artifactId>piccolo2d-extras</artifactId>
				<version>3.0</version>
			</dependency>

			<!-- jfontchooser -->
			<dependency>
				<groupId>say.swing</groupId>
				<artifactId>jfontchooser</artifactId>
				<version>1.0.5</version>
			</dependency>

			<!-- tweenengine -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>aurelienribon.tweenengine</groupId>
				<artifactId>tween-engine-api</artifactId>
				<version>6.3.3</version>
			</dependency>

			<!-- spi -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.mangosdk</groupId>
				<artifactId>spi</artifactId>
				<version>0.2.1</version>
			</dependency>

			<!-- joda time -->
			<!-- Date and time library to replace JDK date handling -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.4</version>
			</dependency>

			<!-- quartz-scheduler -->
			<!-- Enterprise Job Scheduler -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>2.2.1</version>
			</dependency>

			<!-- EJML -->
			<!-- A fast and easy to use dense matrix linear algebra library written
				in Java. -->
			<dependency>
				<!-- LGPL -->
				<groupId>com.googlecode.efficient-java-matrix-library</groupId>
				<artifactId>ejml</artifactId>
				<version>0.25</version>
			</dependency>

			<!-- mime-util -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>eu.medsea.mimeutil</groupId>
				<artifactId>mime-util</artifactId>
				<version>2.1.3</version>
			</dependency>

			<!-- JNA -->
			<!-- Java Native Access -->
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>4.1.0</version>
			</dependency>

			<!-- substance look&feel -->
			<dependency>
				<!-- A fork of @kirilcoolʼs substance project -->
				<!-- BSD License -->
				<groupId>com.github.insubstantial</groupId>
				<artifactId>substance</artifactId>
				<version>7.3</version>
			</dependency>

			<!-- kryo serializer -->
			<!-- Fast, efficient Java serialization -->
			<dependency>
				<!-- New BSD License -->
				<groupId>com.esotericsoftware.kryo</groupId>
				<artifactId>kryo</artifactId>
				<version>2.24.0</version>
			</dependency>

			<!-- migkayout -->
			<!-- MiGLayout - Java Layout Manager for Swing, SWT and JavaFX -->
			<dependency>
				<!-- BSD -->
				<groupId>com.miglayout</groupId>
				<artifactId>miglayout-swing</artifactId>
				<version>4.2</version>
			</dependency>

			<!-- jfreechart -->
			<!-- JFreeChart is a class library, written in Java, for generating charts.
				Utilising the Java2D APIs, it currently supports bar charts, pie charts,
				line charts, XY-plots and time series plots. -->
			<dependency>
				<!-- LGPL -->
				<groupId>org.jfree</groupId>
				<artifactId>jfreechart</artifactId>
				<version>1.0.19</version>
			</dependency>

			<!-- jdesktop -->
			<dependency>
				<groupId>org.jdesktop</groupId>
				<artifactId>beansbinding</artifactId>
				<version>1.2.1</version>
			</dependency>

			<!-- jscience -->
			<dependency>
				<!-- Apache -->
				<groupId>org.jscience</groupId>
				<artifactId>jscience</artifactId>
				<version>4.3.1</version>
			</dependency>

			<!-- swingx -->
			<!-- Contains extensions to the Swing GUI toolkit, including new and enhanced
				components that provide functionality commonly required by rich client applications. -->
			<dependency>
				<!-- LGPL -->
				<groupId>org.swinglabs.swingx</groupId>
				<artifactId>swingx-core</artifactId>
				<version>1.6.5-1</version>
			</dependency>

			<!-- docking-frames -->
			<!-- DockingFrames is an open source Java Swing docking framework. -->
			<dependency>
				<!-- LGPL -->
				<groupId>org.dockingframes</groupId>
				<artifactId>docking-frames-core</artifactId>
				<version>1.1.2-p8d</version>
			</dependency>
			<dependency>
				<!-- LGPL -->
				<groupId>org.dockingframes</groupId>
				<artifactId>docking-frames-common</artifactId>
				<version>1.1.2-p8d</version>
			</dependency>

			<!-- supercsv -->
			<dependency>
				<!-- Apache 2.0 -->
				<groupId>net.sf.supercsv</groupId>
				<artifactId>super-csv</artifactId>
				<version>2.2.0</version>
			</dependency>

			<!-- Small set of Java tools for dealing with streams (InputStreams and
				OutputStreams). -->
			<dependency>
				<!-- BSD -->
				<groupId>net.sf.jsignature.io-tools</groupId>
				<artifactId>easystream</artifactId>
				<version>1.2.14</version>
			</dependency>

			<!-- JTattoo - Consists of several different Look and Feels for Swing
				applications -->
			<dependency>
				<groupId>com.jtattoo</groupId>
				<artifactId>JTattoo</artifactId>
				<version>1.6.10</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
        <extensions>
            <extension>
	            <groupId>org.apache.maven.wagon</groupId>
	            <artifactId>wagon-webdav-jackrabbit</artifactId>
	            <version>2.8</version>
            </extension>
        </extensions>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${project.custom.source.source}</source>
					<target>${project.custom.source.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<escapeString>${project.custom.resources.escapestring}</escapeString>
				</configuration>
			</plugin>

			<!-- deploy sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- deploy test sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- deploy javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<configuration>
					<basedir>${basedir}</basedir>
					<header>${basedir}/src/main/resources/header.txt</header>
					<aggregate>true</aggregate>
					<encoding>${file.encoding}</encoding>
					<strictCheck>true</strictCheck>
					<properties>
						<project.name>${project.artifactId}</project.name>
						<project.year>${project.custom.year}</project.year>
						<project.user.name>${project.custom.user.name}</project.user.name>
						<project.user.email>${project.custom.user.email}</project.user.email>
					</properties>
					<excludes>
						<exclude>**/*.txt</exclude>
					</excludes>
					<mapping>
						<java>SLASHSTAR_STYLE</java>
						<groovy>SLASHSTAR_STYLE</groovy>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<configuration>
					<keyname>ANRI Software</keyname>
				</configuration>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-no-snapshots</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireReleaseDeps>
									<onlyWhenRelease>true</onlyWhenRelease>
									<message>No Snapshots Allowed!</message>
								</requireReleaseDeps>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- This plugin signs all of the project's attached artifacts with
						GnuPG. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.5</version>
				</plugin>
				<plugin>
					<!-- The Maven Project Info Reports Plugin is a plugin that generates
						standard reports for the specified project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<!-- The Compiler Plugin is used to compile the sources of your project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<plugin>
					<!-- Provides utility goals to work with dependencies like copying,
						unpacking, analyzing, resolving and many more. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<!-- The Resources Plugin handles the copying of project resources to
						the output directory. There are two different kinds of resources: main resources
						and test resources. The difference is that the main resources are the resources
						associated to the main source code while the test resources are associated
						to the test source code. Thus, this allows the separation of resources for
						the main source code and its unit tests. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<!-- Builds a Java Archive (JAR) file from the compiled project classes
						and resources. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<!-- The Maven 2 Source Plugin creates a JAR archive of the source files
						of the current project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<!-- Uploads the project artifacts to the internal remote repository. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<!-- The Apache Maven Javadoc Plugin is a plugin that uses the javadoc
						tool for generating javadocs for the specified project. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
				</plugin>
				<plugin>
					<!-- The Loving Iron Fist of Maven -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>
				<plugin>
					<!-- A Maven plugin to create archives of your project's sources, classes,
						dependencies etc. from flexible assembly descriptors. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>
				<plugin>
					<!-- The Surefire Report Plugin parses the generated TEST-*.xml files
						under ${basedir}/target/surefire-reports and renders them to DOXIA which
						creates the web interface version of the test results. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.17</version>
				</plugin>
				<plugin>
					<!-- The JXR Plugin produces a cross-reference of the projectʼs sources.
						The generated reports make it easier for the user to reference or find specific
						lines of code. It is also handy when used with the PMD Plugin for referencing
						errors found in the code. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<!-- A Maven plugin for the PMD toolkit, that produces a report on both
						code rule violations and detected copy and paste fragments, as well as being
						able to fail the build based on these metrics. -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<plugin>
					<!-- This plugin contains various small independent goals to assist
						with Maven build lifecycle -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.9.1</version>
				</plugin>
				<plugin>
					<!-- Maven 2 plugin to check and update license headers in source files -->
					<groupId>com.mycila.maven-license-plugin</groupId>
					<artifactId>maven-license-plugin</artifactId>
					<version>1.9.0</version>
				</plugin>
				<plugin>
					<!-- Maven plugin for IzPack -->
					<groupId>org.codehaus.izpack</groupId>
					<artifactId>izpack-maven-plugin</artifactId>
					<version>1.0-alpha-5</version>
				</plugin>
				<plugin>
					<!-- This plugin creates Windows executables from Java jar files using
						the Launch4j utility. -->
					<groupId>com.akathist.maven.plugins.launch4j</groupId>
					<artifactId>launch4j-maven-plugin</artifactId>
					<version>1.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-nar-plugin</artifactId>
					<version>2.1-SNAPSHOT</version>
				</plugin>
				<plugin>
					<!-- This plugin is designed to give you a build number. So when you
						might make 100 builds of version 1.0-SNAPSHOT, you can differentiate between
						them all. -->
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.2</version>
				</plugin>
				<plugin>
					<!--This plugin's configuration is used to store Eclipse m2e settings
						only. It has no influence on the Maven build itself. -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-nar-plugin</artifactId>
										<versionRange>[2.1-SNAPSHOT,)</versionRange>
										<goals>
											<goal>nar-vcproj</goal>
											<goal>nar-system-generates</goal>
											<goal>nar-unpack</goal>
											<goal>nar-download</goal>
											<goal>nar-resources</goal>
											<goal>nar-gnu-resources</goal>
											<goal>nar-gnu-configure</goal>
											<goal>nar-system-generate</goal>
											<goal>nar-compile</goal>
											<goal>nar-gnu-process</goal>
											<goal>nar-javah</goal>
											<goal>nar-gnu-make</goal>
											<goal>nar-testUnpack</goal>
											<goal>nar-testDownload</goal>
											<goal>nar-testCompile</goal>
											<goal>nar-validate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<reporting>
		<plugins>
			<plugin>
				<!-- The Maven Project Info Reports Plugin is a plugin that generates
					standard reports for the specified project. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<!-- The Surefire Report Plugin parses the generated TEST-*.xml files
					under ${basedir}/target/surefire-reports and renders them to DOXIA which
					creates the web interface version of the test results. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.17</version>
			</plugin>
			<plugin>
				<!-- The Apache Maven Javadoc Plugin is a plugin that uses the javadoc
					tool for generating javadocs for the specified project. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
			<plugin>
				<!-- The JXR Plugin produces a cross-reference of the projectʼs sources.
					The generated reports make it easier for the user to reference or find specific
					lines of code. It is also handy when used with the PMD Plugin for referencing
					errors found in the code. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<!-- A Maven plugin for the PMD toolkit, that produces a report on both
					code rule violations and detected copy and paste fragments, as well as being
					able to fail the build based on these metrics. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<linkXref>true</linkXref>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${project.custom.source.target}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<!-- This Plug-In generates reports based on the FindBugs Library -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<!-- Activate profile with -Psign-artifact -->
			<id>sign-artifact</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
